{"version":3,"file":"bundle.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://cursojstypescript/./src/form.ts"],"sourcesContent":["\"use strict\";\n// import isEmail from 'validator/lib/isEmail';\nconst SHOW_ERROR_MESSAGE = 'show-error-message';\nconst form = document.querySelector('.form');\nconst username = document.querySelector('.username');\nconst email = document.querySelector('.email');\nconst password = document.querySelector('.password');\nconst password2 = document.querySelector('.password2');\nform.addEventListener('submit', function (event) {\n    event.preventDefault();\n    hideErrorMessages(this);\n    checkForEmptyFields(username, email, password, password2);\n    checkEmail(email);\n});\nfunction checkForEmptyFields(...inputs) {\n    inputs.forEach((input) => {\n        if (!input.value)\n            showErrorMessage(input, 'O campo está vazio!');\n    });\n}\nfunction checkEmail(input) {\n    if (!input.value)\n        showErrorMessage(input, 'O email é inválido!');\n}\nfunction hideErrorMessages(form) {\n    form\n        .querySelectorAll('.' + SHOW_ERROR_MESSAGE)\n        .forEach((item) => item.classList.remove(SHOW_ERROR_MESSAGE));\n}\nfunction showErrorMessage(input, msg) {\n    const formFields = input.parentElement;\n    const errorMessage = formFields.querySelector('.error-message');\n    errorMessage.innerText = msg;\n    formFields.classList.add(SHOW_ERROR_MESSAGE);\n}\n"],"names":[],"sourceRoot":""}